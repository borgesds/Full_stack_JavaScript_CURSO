==> https://gitlab.com/escoladejavascript.com/webpack-start

==> COM O ARQUIVO PADRÃO, EXECUTE O npm install PARA CARREGAR TUDO, E DEPOIS npm start CASO CONTRARIO SIGA A INSTRUÇÕES A BAIXO:




==> Criar um diretório
npm init -y


instalar antes do webpack, pq pode ter alguma alteração:

sudo chown -R $USER:$GROUP ~/.npm
sudo chown -R $USER:$GROUP ~/.config


--INSTALAR O WEBPACK

npm install --save-dev webpack webpack-cli

-- 1-Crie um diretorio chamado src e dentro um arquivo index.js
-- 2-Crie um diretorio chamado dist e dentro um arquivo index.html
-- 3-<script src="main.js"></script> /*Arquivo padrão que o webpack cria*/

--Install a biblioteca moment

npm install moment


-- 1-No arquivo index.js import o moment

--Install 

npx webpack

--URGENT: 
O npx acima é só para execução do exercício. ==>Depois de criar um arquivo webpack.config.js, e em seguida deve excluir o main.js se vc executou o código acima. Ele vai buscar o arquivo index.js == './src/index.js' que é passado o caminho dentro do webpack.config.js:

--> Troque <script src="index.js"></script> /*Arquivo padrão que o webpack cria*/

module.exports = {
    entry: {
        index: './src/index.js'
    }
}

Execute:
npx webpack --mode development



==> NAME DECLARATION DEFAULT: <==
-- Add outro arquivo com o caminho.

const path = require('path')

module.exports = {
    entry: {
        index: './src/index.js', 
        galaxy: './src/galaxy.js'
    },

    output: {
        filename: '[name].bundle.js', 
        path: path.resolve(__dirname, 'dist')
    }
}

Execute:
npx webpack --mode development

--> Trocar o script dentro do html:

<script src="index.bundle.js"></script> /*Arquivo padrão que o webpack cria*/
<script src="galaxy.bundle.js"></script> /*Arquivo padrão que o webpack cria*/
</body>



--INSTALAR o BABEL PARA FUNCIONAR JUNTO

core-js@3 = Qual o tipo da versão que vc quer? 3

npm install @babel/core @babel/preset-env babel-loader core-js@3



==> NAME DECLARATION DEFAULT: Faz mais uma adição <==

const path = require('path')

module.exports = {
    entry: {
        index: './src/index.js', 
        galaxy: './src/galaxy.js'
    },

    output: {
        filename: '[name].bundle.js', 
        path: path.resolve(__dirname, 'dist')
    },

    module: {
        rules: [{
            test: /\.js$/, //Pega todos os arquivos que tem .JS
            use: ['babel-loader']
        }]
    }
}

==> Criar um arquivo ^
        [
            "@babel/preset-env"
        ]
    ]
}

--Executar no terminal:

npx webpack --mode development

--Criar mini servidor local:

npm install webpack-dev-server --save-dev



==> NAME DECLARATION DEFAULT: Faz mais uma adição <==

const path = require('path')

module.exports = {
    entry: {
        index: './src/index.js', 
        galaxy: './src/galaxy.js'
    },

    output: {
        filename: '[name].bundle.js', 
        path: path.resolve(__dirname, 'dist')
    },

    module: {
        rules: [{
            test: /\.js$/, //Pega todos os arquivos que tem .JS
            use: ['babel-loader']
        }]
    },

    watch: true,

    devServer: {
        static: {
            directory: path.join(__dirname, "dist"),
            watch: true,
        }
    }
}



--Add um elemento no package.json:

{
  "name": "04_desvendandoowebpack",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "webpack-dev-server" <=======================
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "webpack": "^5.72.0",
    "webpack-cli": "^4.9.2",
    "webpack-dev-server": "^4.8.1"
  },
  "dependencies": {
    "@babel/core": "^7.17.10",
    "@babel/preset-env": "^7.17.10",
    "babel-loader": "^8.2.5",
    "core-js": "^3.22.3",
    "moment": "^2.29.3"
  }
}

--Startar:

npm run start